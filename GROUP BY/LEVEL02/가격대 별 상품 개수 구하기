Description
다음은 어느 의류 쇼핑몰에서 판매중인 상품들의 정보를 담은 PRODUCT 테이블입니다. PRODUCT 테이블은 아래와 같은 구조로 되어있으며, PRODUCT_ID, PRODUCT_CODE, PRICE는 각각 상품 ID, 상품코드, 판매가를 나타냅니다.

Column name	Type	Nullable
PRODUCT_ID	INTEGER	FALSE
PRODUCT_CODE	VARCHAR(8)	FALSE
PRICE	INTEGER	FALSE
상품 별로 중복되지 않는 8자리 상품코드 값을 가지며 앞 2자리는 카테고리 코드를 나타냅니다.

문제
PRODUCT 테이블에서 만원 단위의 가격대 별로 상품 개수를 출력하는 SQL 문을 작성해주세요. 이때 컬럼명은 각각 컬럼명은 PRICE_GROUP, PRODUCTS로 지정해주시고 가격대 정보는 각 구간의 최소금액(10,000원 이상 ~ 20,000 미만인 구간인 경우 10,000)으로 표시해주세요. 결과는 가격대를 기준으로 오름차순 정렬해주세요.

예시
예를 들어 PRODUCT 테이블이 다음과 같다면

PRODUCT_ID	PRODUCT_CODE	PRICE
1	A1000011	10000
2	A1000045	9000
3	C3000002	22000
4	C3000006	15000
5	C3000010	30000
6	K1000023	17000
만원 단위의 가격대 별로 상품을 나누면

가격대가 0원 ~ 1만원 미만인 상품은 PRODUCT_ID 가 2인 상품 1개,
가격대가 1만원 이상 ~ 2만원 미만인 상품들은 PRODUCT_ID 가 1, 4, 6인 상품 3개,
가격대가 2만원 이상 ~ 3만원 미만인 상품은 PRODUCT_ID 가 3인 상품 1개,
가격대가 3만원 이상 ~ 4만원 미만인 상품은 PRODUCT_ID 가 5인 상품 1개,
에 각각 해당하므로 다음과 같이 결과가 나와야 합니다.

PRICE_GROUP	PRODUCTS
0	1
10000	3
20000	1
30000	1

SOLUTION
SELECT
    (CASE
        WHEN PRICE >= 0 AND PRICE < 10000 THEN 0
        WHEN PRICE >= 10000 AND PRICE < 20000 THEN 10000
        WHEN PRICE >= 20000 AND PRICE < 30000 THEN 20000
        ELSE 30000
    END) AS PRICE_GROUP, COUNT(PRICE) AS PRODUCTS
FROM PRODUCT
GROUP BY PRICE_GROUP
ORDER BY PRICE_GROUP ASC;

흠...오류가 계속 난다...뭐지???
일단 내일 다시 한번 풀어봐야겠다

정답

SELECT
    FLOOR(PRICE / 10000) * 10000 AS PRICE_GROUP,
    COUNT(*) AS PRODUCTS
FROM PRODUCT
GROUP BY PRICE_GROUP
ORDER BY PRICE_GROUP;

FLOOR(PRICE / 10000): 가격을 만원 단위로 나눈 후, FLOOR 함수로 내림 처리하여 만원 단위의 정수를 만듭니다. 예를 들어, 가격이 17,000원이면 FLOOR(17000 / 10000) = 1이 됩니다.
FLOOR(PRICE / 10000) * 10000: 다시 10,000원을 곱해 가격대를 만원 단위로 표시합니다. 이로 인해 17,000원은 10,000원, 25,000원은 20,000원으로 변환됩니다.
COUNT(*): 각 가격대에 속하는 상품의 개수를 계산합니다.
GROUP BY PRICE_GROUP: 만원 단위로 그룹화합니다.
ORDER BY PRICE_GROUP: 결과를 가격대의 최소 금액 기준으로 오름차순 정렬합니다.
